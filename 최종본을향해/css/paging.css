/* 수정할때 빡셀수 있습니다
차라리 클래스나 아이디를 주고 추가를하는게 편할거같네요!
*/
/* 기본구조 id가 book인 div
버튼으로 쓰일 bookLeft와 bookRight
클래스 page로 페이지를 늘리며
pageLeft와 pageRight는 첫번째와두번째 page클래스div에 줄것
page클래스div안에는 앞면인front와뒷면인back클래스
pageLeft에서는 back이 pageRight에서는 front가 보임
<div id="book">
    <div id="bookLeft"></div>
    <div id="bookRight"></div>
    <div class="page pageLeft">
        <div class="front">맨앞(안보임)</div>
        <div class="back">12</div>
    </div>
    <div class="page pageRight">
        <div class="front">21</div>
        <div class="back">22</div>
    </div>
</div>
*/
*{box-sizing: border-box; margin:0 auto;padding:0;}
#book{
/* 양쪽면을 모두담는 책자체인부분 */
width : 600px;
height : 300px;
position: relative;
/* display: none; */
/* 포지션 relative만 해두면 여기는 마음껏 */
}
#bookLeft{
/* 책 왼쪽을 누를때 버튼역할을 하는부분 */
width : 50%;
height :100%;
position : absolute;
top:0;
left:0;
z-index: 99;
}
#bookRight{
/* 책 오른쪽을 누를때 버튼역할을 하는부분 */
width : 50%;
height :100%;
position : absolute;
top:0;
left:50%;
z-index: 99;
}
.page{
width :50%;
height: 100%;;
position : relative;
perspective: 900px;
display: none;
/* 페이지에 들어가는 부분 display:none인 이유는 맨앞에없는것을 가리기위함 */
}
.page div{
width : 100%;
height : 100%;
position: absolute;
top:0;
/* 페이지안쪽 설정 동일한위치에 곂치게해줌 */
}
.frontpage{
backface-visibility: hidden;
/* background-color: green; */
/* 페이지중 앞면 */
}
.backpage{
/* background-color: blue; */
backface-visibility: hidden;
/* 페이지중 뒷면 넘어갔을때 제대로보이기위해서
미리 뒤집어둠 */
}
@keyframes paging{
/* 페이지넘어가는 중간에 앞뒤가 바뀌게 되는 장면 */
0%{}
50%{
    backface-visibility: hidden;
}
51%{
    backface-visibility: visible;
}
100%{
    backface-visibility: visible;
}
}
.paging{
z-index: 99;
}
/* 페이지를 오른쪽에서 왼쪽으로 넘기는 부분 */
.pageRight{
position: absolute;
top:0;
left:50%;
display: inline-block;
}
.pageRight .backpage{
transform:rotateY(180deg);
}
.pagingRight{
/* 오른쪽에서 왼쪽으로넘어감 */
animation: pagingRight 2s linear forwards;
transform-origin: 0 0;
/* 페이지넘어가는 애니메이션을 주는 클래스
jq로 부여하며 직접 클래스 준곳은없음( 줬다가 빼야함) */
}
.pagingRight .backpage{
animation: paging 2s linear forwards;
z-index: 5;
/* 페이지 넘어가는 중간 앞뒤가 바뀌는 부분  .paging과 animate속성를 동일하게해 정확히 중간에 바뀌어
점멸없이 바뀌게됨*/
}
@keyframes pagingRight{
/* 오른쪽에서왼쪽으로페이지넘기는 애니메이션 */
0% {
    transform:rotateY(0deg); }
100% {
    transform:rotateY(-180deg); }
}



/* 왼쪽에서 오른쪽으로 페이지를 넘기는 부분 으ㅏ아아아아아아아아 */
/* 페이지를 오른쪽에서 왼쪽으로 넘기는 부분 */
/* 페이지를 오른쪽에서 왼쪽으로 넘기는 부분 */
.pageLeft{
position: absolute;
top:0;
left:0;
display: inline-block;
z-index: 11;
}
.pageLeft .frontpage{
transform:rotateY(180deg);
}
.pagingLeft{
/* 오른쪽에서 왼쪽으로넘어감 */
animation: pagingLeft 2s linear forwards;
transform-origin: right bottom;
/* 페이지넘어가는 애니메이션을 주는 클래스
jq로 부여하며 직접 클래스 준곳은없음( 줬다가 빼야함) */
}
.pagingLeft .frontpage{
/* 페이지 넘어가는 중간 앞뒤가 바뀌는 부분  .paging과 animate속성를 동일하게해 정확히 중간에 바뀌어
점멸없이 바뀌게됨*/
animation: paging 2s linear forwards;
z-index: 5;
/* 왼쪽으로넘어가는중에 페이지가 보이게하는부분 */
}
@keyframes pagingLeft{
/* 오른쪽에서왼쪽으로페이지넘기는 애니메이션 */
0% {
    transform:rotateY(0deg); }
100% {
    transform:rotateY(180deg); }
}